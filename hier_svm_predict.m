function [acc_final,output]=hier_svm_predict(label,feature,D,svm_layer,svm_final)
%Input: label: N by 1 binary (0-1) vector of label of each individual.
%       feature: N by p matrix, each row corresponds to an individual and
%       each column corresponds to a feature.
%       D: p by 1 vector of integers indicating the feature domain of each column of
%       feature.
%       svm_layer:svm_layer generated by function 'hier_svm_train'.
%       svm_final:svm_final generated by function 'hier_svm_train'.
%Output: acc_final: a scalar indicating accuracy of the final model.
%        output: N by 1 vector indicates the predicted
%        label by the final model.
% Programmed by Yunyi Zhou.
dom=unique(D);
Nd=length(dom);
N=length(label);
svm_score=zeros(N,Nd);
for nd=1:Nd
    inp=feature(:,D==dom(nd));
    svm=svm_layer{nd};
    sv=svm.SupportVectors;
    alpha=svm.Alpha;
    icp=svm.Bias;
    shift=svm.ScaleData.shift;
    scale=svm.ScaleData.scaleFactor;
    kfun=svm.KernelFunction;
    kfunargs=svm.KernelFunctionArgs;
    parfor i=1:N
        svm_score(i,nd)=alpha'*feval(kfun,sv,(inp(i,:)+shift).*scale,kfunargs{:})+icp;
    end
end
output=svmclassify(svm_final,svm_score);
acc_final=sum(output==label)/N;
end